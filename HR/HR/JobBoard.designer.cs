#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HR
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JobBoard")]
	public partial class JobBoardDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertEducation(Education instance);
    partial void UpdateEducation(Education instance);
    partial void DeleteEducation(Education instance);
    partial void InsertExperience(Experience instance);
    partial void UpdateExperience(Experience instance);
    partial void DeleteExperience(Experience instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertEducationalBackground(EducationalBackground instance);
    partial void UpdateEducationalBackground(EducationalBackground instance);
    partial void DeleteEducationalBackground(EducationalBackground instance);
    partial void InsertEmploymentHistory(EmploymentHistory instance);
    partial void UpdateEmploymentHistory(EmploymentHistory instance);
    partial void DeleteEmploymentHistory(EmploymentHistory instance);
    partial void InsertPreviousEmployment(PreviousEmployment instance);
    partial void UpdatePreviousEmployment(PreviousEmployment instance);
    partial void DeletePreviousEmployment(PreviousEmployment instance);
    partial void InsertReference(Reference instance);
    partial void UpdateReference(Reference instance);
    partial void DeleteReference(Reference instance);
    partial void InsertJobCategory(JobCategory instance);
    partial void UpdateJobCategory(JobCategory instance);
    partial void DeleteJobCategory(JobCategory instance);
    partial void InsertApplication(Application instance);
    partial void UpdateApplication(Application instance);
    partial void DeleteApplication(Application instance);
    partial void InsertConviction(Conviction instance);
    partial void UpdateConviction(Conviction instance);
    partial void DeleteConviction(Conviction instance);
    partial void InsertApplicationFile(ApplicationFile instance);
    partial void UpdateApplicationFile(ApplicationFile instance);
    partial void DeleteApplicationFile(ApplicationFile instance);
    partial void InsertJobShift(JobShift instance);
    partial void UpdateJobShift(JobShift instance);
    partial void DeleteJobShift(JobShift instance);
    partial void InsertShift(Shift instance);
    partial void UpdateShift(Shift instance);
    partial void DeleteShift(Shift instance);
    partial void InsertJobContact(JobContact instance);
    partial void UpdateJobContact(JobContact instance);
    partial void DeleteJobContact(JobContact instance);
    #endregion
		
		public JobBoardDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["JobBoardConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public JobBoardDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JobBoardDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JobBoardDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JobBoardDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Education> Educations
		{
			get
			{
				return this.GetTable<Education>();
			}
		}
		
		public System.Data.Linq.Table<Experience> Experiences
		{
			get
			{
				return this.GetTable<Experience>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<EducationalBackground> EducationalBackgrounds
		{
			get
			{
				return this.GetTable<EducationalBackground>();
			}
		}
		
		public System.Data.Linq.Table<EmploymentHistory> EmploymentHistories
		{
			get
			{
				return this.GetTable<EmploymentHistory>();
			}
		}
		
		public System.Data.Linq.Table<PreviousEmployment> PreviousEmployments
		{
			get
			{
				return this.GetTable<PreviousEmployment>();
			}
		}
		
		public System.Data.Linq.Table<Reference> References
		{
			get
			{
				return this.GetTable<Reference>();
			}
		}
		
		public System.Data.Linq.Table<JobCategory> JobCategories
		{
			get
			{
				return this.GetTable<JobCategory>();
			}
		}
		
		public System.Data.Linq.Table<Application> Applications
		{
			get
			{
				return this.GetTable<Application>();
			}
		}
		
		public System.Data.Linq.Table<Conviction> Convictions
		{
			get
			{
				return this.GetTable<Conviction>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationFile> ApplicationFiles
		{
			get
			{
				return this.GetTable<ApplicationFile>();
			}
		}
		
		public System.Data.Linq.Table<JobShift> JobShifts
		{
			get
			{
				return this.GetTable<JobShift>();
			}
		}
		
		public System.Data.Linq.Table<Shift> Shifts
		{
			get
			{
				return this.GetTable<Shift>();
			}
		}
		
		public System.Data.Linq.Table<JobContact> JobContacts
		{
			get
			{
				return this.GetTable<JobContact>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private string _short_desc;
		
		private string _long_desc;
		
		private System.DateTime _date_added;
		
		private System.Guid _parent;
		
		private EntityRef<JobCategory> _JobCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onshort_descChanging(string value);
    partial void Onshort_descChanged();
    partial void Onlong_descChanging(string value);
    partial void Onlong_descChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    partial void OnparentChanging(System.Guid value);
    partial void OnparentChanged();
    #endregion
		
		public Category()
		{
			this._JobCategory = default(EntityRef<JobCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._JobCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_desc", DbType="VarChar(500)")]
		public string short_desc
		{
			get
			{
				return this._short_desc;
			}
			set
			{
				if ((this._short_desc != value))
				{
					this.Onshort_descChanging(value);
					this.SendPropertyChanging();
					this._short_desc = value;
					this.SendPropertyChanged("short_desc");
					this.Onshort_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_long_desc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string long_desc
		{
			get
			{
				return this._long_desc;
			}
			set
			{
				if ((this._long_desc != value))
				{
					this.Onlong_descChanging(value);
					this.SendPropertyChanging();
					this._long_desc = value;
					this.SendPropertyChanged("long_desc");
					this.Onlong_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobCategory_Category", Storage="_JobCategory", ThisKey="id", OtherKey="cat", IsForeignKey=true)]
		internal JobCategory JobCategory
		{
			get
			{
				return this._JobCategory.Entity;
			}
			set
			{
				JobCategory previousValue = this._JobCategory.Entity;
				if (((previousValue != value) 
							|| (this._JobCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobCategory.Entity = null;
						previousValue.Category = null;
					}
					this._JobCategory.Entity = value;
					if ((value != null))
					{
						value.Category = this;
						this._id = value.cat;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("JobCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private string _street;
		
		private string _city;
		
		private System.Guid _state_id;
		
		private string _phone;
		
		private string _fax;
		
		private string _email;
		
		private string _username;
		
		private string _password;
		
		private EntitySet<State> _States;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<JobContact> _JobContact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onstate_idChanging(System.Guid value);
    partial void Onstate_idChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Contact()
		{
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			this._Job = default(EntityRef<Job>);
			this._JobContact = default(EntityRef<JobContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((this._Job.HasLoadedOrAssignedValue || this._JobContact.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="VarChar(500)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(200)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(15)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(200)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_State", Storage="_States", ThisKey="state_id", OtherKey="id")]
		public EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Contact", Storage="_Job", ThisKey="id", OtherKey="contact", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._id = value.contact;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobContact_Contact", Storage="_JobContact", ThisKey="id", OtherKey="contact", IsForeignKey=true)]
		internal JobContact JobContact
		{
			get
			{
				return this._JobContact.Entity;
			}
			set
			{
				JobContact previousValue = this._JobContact.Entity;
				if (((previousValue != value) 
							|| (this._JobContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobContact.Entity = null;
						previousValue.Contact = null;
					}
					this._JobContact.Entity = value;
					if ((value != null))
					{
						value.Contact = this;
						this._id = value.contact;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("JobContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Education")]
	public partial class Education : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _edu_level;
		
		private System.DateTime _date_added;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onedu_levelChanging(string value);
    partial void Onedu_levelChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public Education()
		{
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edu_level", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string edu_level
		{
			get
			{
				return this._edu_level;
			}
			set
			{
				if ((this._edu_level != value))
				{
					this.Onedu_levelChanging(value);
					this.SendPropertyChanging();
					this._edu_level = value;
					this.SendPropertyChanged("edu_level");
					this.Onedu_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Education", Storage="_Job", ThisKey="id", OtherKey="education", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Educations.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Educations.Add(this);
						this._id = value.education;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Experience")]
	public partial class Experience : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _experience1;
		
		private System.DateTime _date_added;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onexperience1Changing(string value);
    partial void Onexperience1Changed();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public Experience()
		{
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="experience", Storage="_experience1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string experience1
		{
			get
			{
				return this._experience1;
			}
			set
			{
				if ((this._experience1 != value))
				{
					this.Onexperience1Changing(value);
					this.SendPropertyChanging();
					this._experience1 = value;
					this.SendPropertyChanged("experience1");
					this.Onexperience1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Experience", Storage="_Job", ThisKey="id", OtherKey="experience", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Experiences.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Experiences.Add(this);
						this._id = value.experience;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jobs")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _title;
		
		private string _short_desc;
		
		private string _long_desc;
		
		private System.DateTime _date_added;
		
		private System.Guid _experience;
		
		private System.Guid _location;
		
		private System.Guid _education;
		
		private System.Guid _contact;
		
		private System.Guid _poster;
		
		private int _isDriving;
		
		private string _salary_type;
		
		private string _status;
		
		private string _jobState;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<Education> _Educations;
		
		private EntitySet<Experience> _Experiences;
		
		private EntitySet<Location> _Locations;
		
		private EntitySet<JobCategory> _JobCategories;
		
		private EntitySet<JobShift> _JobShifts;
		
		private EntitySet<JobContact> _Notifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onshort_descChanging(string value);
    partial void Onshort_descChanged();
    partial void Onlong_descChanging(string value);
    partial void Onlong_descChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    partial void OnexperienceChanging(System.Guid value);
    partial void OnexperienceChanged();
    partial void OnlocationChanging(System.Guid value);
    partial void OnlocationChanged();
    partial void OneducationChanging(System.Guid value);
    partial void OneducationChanged();
    partial void OncontactChanging(System.Guid value);
    partial void OncontactChanged();
    partial void OnposterChanging(System.Guid value);
    partial void OnposterChanged();
    partial void OnisDrivingChanging(int value);
    partial void OnisDrivingChanged();
    partial void Onsalary_typeChanging(string value);
    partial void Onsalary_typeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnjobStateChanging(string value);
    partial void OnjobStateChanged();
    #endregion
		
		public Job()
		{
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._Educations = new EntitySet<Education>(new Action<Education>(this.attach_Educations), new Action<Education>(this.detach_Educations));
			this._Experiences = new EntitySet<Experience>(new Action<Experience>(this.attach_Experiences), new Action<Experience>(this.detach_Experiences));
			this._Locations = new EntitySet<Location>(new Action<Location>(this.attach_Locations), new Action<Location>(this.detach_Locations));
			this._JobCategories = new EntitySet<JobCategory>(new Action<JobCategory>(this.attach_JobCategories), new Action<JobCategory>(this.detach_JobCategories));
			this._JobShifts = new EntitySet<JobShift>(new Action<JobShift>(this.attach_JobShifts), new Action<JobShift>(this.detach_JobShifts));
			this._Notifications = new EntitySet<JobContact>(new Action<JobContact>(this.attach_Notifications), new Action<JobContact>(this.detach_Notifications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_desc", DbType="VarChar(500)")]
		public string short_desc
		{
			get
			{
				return this._short_desc;
			}
			set
			{
				if ((this._short_desc != value))
				{
					this.Onshort_descChanging(value);
					this.SendPropertyChanging();
					this._short_desc = value;
					this.SendPropertyChanged("short_desc");
					this.Onshort_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_long_desc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string long_desc
		{
			get
			{
				return this._long_desc;
			}
			set
			{
				if ((this._long_desc != value))
				{
					this.Onlong_descChanging(value);
					this.SendPropertyChanging();
					this._long_desc = value;
					this.SendPropertyChanged("long_desc");
					this.Onlong_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_education", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid education
		{
			get
			{
				return this._education;
			}
			set
			{
				if ((this._education != value))
				{
					this.OneducationChanging(value);
					this.SendPropertyChanging();
					this._education = value;
					this.SendPropertyChanged("education");
					this.OneducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_poster", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid poster
		{
			get
			{
				return this._poster;
			}
			set
			{
				if ((this._poster != value))
				{
					this.OnposterChanging(value);
					this.SendPropertyChanging();
					this._poster = value;
					this.SendPropertyChanged("poster");
					this.OnposterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDriving", DbType="int NOT NULL")]
		public int isDriving
		{
			get
			{
				return this._isDriving;
			}
			set
			{
				if ((this._isDriving != value))
				{
					this.OnisDrivingChanging(value);
					this.SendPropertyChanging();
					this._isDriving = value;
					this.SendPropertyChanged("isDriving");
					this.OnisDrivingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary_type", DbType="VarChar(100)")]
		public string salary_type
		{
			get
			{
				return this._salary_type;
			}
			set
			{
				if ((this._salary_type != value))
				{
					this.Onsalary_typeChanging(value);
					this.SendPropertyChanging();
					this._salary_type = value;
					this.SendPropertyChanged("salary_type");
					this.Onsalary_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(100)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobState", DbType="VarChar (10) NOT NULL", CanBeNull=false)]
		public string jobState
		{
			get
			{
				return this._jobState;
			}
			set
			{
				if ((this._jobState != value))
				{
					this.OnjobStateChanging(value);
					this.SendPropertyChanging();
					this._jobState = value;
					this.SendPropertyChanged("jobState");
					this.OnjobStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Contact", Storage="_Contacts", ThisKey="contact", OtherKey="id")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Education", Storage="_Educations", ThisKey="education", OtherKey="id")]
		public EntitySet<Education> Educations
		{
			get
			{
				return this._Educations;
			}
			set
			{
				this._Educations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Experience", Storage="_Experiences", ThisKey="experience", OtherKey="id")]
		public EntitySet<Experience> Experiences
		{
			get
			{
				return this._Experiences;
			}
			set
			{
				this._Experiences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Location", Storage="_Locations", ThisKey="location", OtherKey="id")]
		public EntitySet<Location> Locations
		{
			get
			{
				return this._Locations;
			}
			set
			{
				this._Locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobCategory", Storage="_JobCategories", ThisKey="id", OtherKey="job")]
		public EntitySet<JobCategory> JobCategories
		{
			get
			{
				return this._JobCategories;
			}
			set
			{
				this._JobCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobShift", Storage="_JobShifts", ThisKey="id", OtherKey="job")]
		public EntitySet<JobShift> JobShifts
		{
			get
			{
				return this._JobShifts;
			}
			set
			{
				this._JobShifts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobContact", Storage="_Notifications", ThisKey="id", OtherKey="job")]
		public EntitySet<JobContact> Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				this._Notifications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Educations(Education entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Educations(Education entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Experiences(Experience entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Experiences(Experience entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_JobCategories(JobCategory entity)
		{
			this.SendPropertyChanging();
			entity.Job1 = this;
		}
		
		private void detach_JobCategories(JobCategory entity)
		{
			this.SendPropertyChanging();
			entity.Job1 = null;
		}
		
		private void attach_JobShifts(JobShift entity)
		{
			this.SendPropertyChanging();
			entity.Job1 = this;
		}
		
		private void detach_JobShifts(JobShift entity)
		{
			this.SendPropertyChanging();
			entity.Job1 = null;
		}
		
		private void attach_Notifications(JobContact entity)
		{
			this.SendPropertyChanging();
			entity.Job1 = this;
		}
		
		private void detach_Notifications(JobContact entity)
		{
			this.SendPropertyChanging();
			entity.Job1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _city;
		
		private System.Guid _state_id;
		
		private EntitySet<State> _States;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onstate_idChanging(System.Guid value);
    partial void Onstate_idChanged();
    #endregion
		
		public Location()
		{
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_State", Storage="_States", ThisKey="state_id", OtherKey="id")]
		public EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Location", Storage="_Job", ThisKey="id", OtherKey="location", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Locations.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Locations.Add(this);
						this._id = value.location;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _state1;
		
		private string _abbr;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onstate1Changing(string value);
    partial void Onstate1Changed();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    #endregion
		
		public State()
		{
			this._Location = default(EntityRef<Location>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if ((this._Location.HasLoadedOrAssignedValue || this._Contact.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="state", Storage="_state1", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string state1
		{
			get
			{
				return this._state1;
			}
			set
			{
				if ((this._state1 != value))
				{
					this.Onstate1Changing(value);
					this.SendPropertyChanging();
					this._state1 = value;
					this.SendPropertyChanged("state1");
					this.Onstate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_State", Storage="_Location", ThisKey="id", OtherKey="state_id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._id = value.state_id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_State", Storage="_Contact", ThisKey="id", OtherKey="state_id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._id = value.state_id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EducationalBackground")]
	public partial class EducationalBackground : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _school_type;
		
		private string _name;
		
		private string _address;
		
		private string _city;
		
		private System.Nullable<System.Guid> _state_id;
		
		private System.Nullable<decimal> _years_completed;
		
		private string _gpa;
		
		private string _degree;
		
		private System.Guid _app_id;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onschool_typeChanging(string value);
    partial void Onschool_typeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onstate_idChanging(System.Nullable<System.Guid> value);
    partial void Onstate_idChanged();
    partial void Onyears_completedChanging(System.Nullable<decimal> value);
    partial void Onyears_completedChanged();
    partial void OngpaChanging(string value);
    partial void OngpaChanged();
    partial void OndegreeChanging(string value);
    partial void OndegreeChanged();
    partial void Onapp_idChanging(System.Guid value);
    partial void Onapp_idChanged();
    #endregion
		
		public EducationalBackground()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_type", DbType="VarChar(300)")]
		public string school_type
		{
			get
			{
				return this._school_type;
			}
			set
			{
				if ((this._school_type != value))
				{
					this.Onschool_typeChanging(value);
					this.SendPropertyChanging();
					this._school_type = value;
					this.SendPropertyChanged("school_type");
					this.Onschool_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(300)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(300)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_years_completed", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> years_completed
		{
			get
			{
				return this._years_completed;
			}
			set
			{
				if ((this._years_completed != value))
				{
					this.Onyears_completedChanging(value);
					this.SendPropertyChanging();
					this._years_completed = value;
					this.SendPropertyChanged("years_completed");
					this.Onyears_completedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gpa", DbType="VarChar(50)")]
		public string gpa
		{
			get
			{
				return this._gpa;
			}
			set
			{
				if ((this._gpa != value))
				{
					this.OngpaChanging(value);
					this.SendPropertyChanging();
					this._gpa = value;
					this.SendPropertyChanged("gpa");
					this.OngpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_degree", DbType="VarChar(300)")]
		public string degree
		{
			get
			{
				return this._degree;
			}
			set
			{
				if ((this._degree != value))
				{
					this.OndegreeChanging(value);
					this.SendPropertyChanging();
					this._degree = value;
					this.SendPropertyChanged("degree");
					this.OndegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_EducationalBackground", Storage="_Application", ThisKey="app_id", OtherKey="id", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.EducationalBackgrounds.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.EducationalBackgrounds.Add(this);
						this._app_id = value.id;
					}
					else
					{
						this._app_id = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmploymentHistory")]
	public partial class EmploymentHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _employer;
		
		private string _phone;
		
		private System.Nullable<System.DateTime> _start_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private string _starting_title;
		
		private string _end_title;
		
		private string _supervisor;
		
		private string _address;
		
		private string _city;
		
		private System.Nullable<System.Guid> _state_id;
		
		private System.Nullable<int> _canContact;
		
		private string _summary;
		
		private string _reason_leaving;
		
		private string _start_pay;
		
		private string _end_pay;
		
		private System.Nullable<System.Guid> _app_id;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnemployerChanging(string value);
    partial void OnemployerChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onstart_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Onstarting_titleChanging(string value);
    partial void Onstarting_titleChanged();
    partial void Onend_titleChanging(string value);
    partial void Onend_titleChanged();
    partial void OnsupervisorChanging(string value);
    partial void OnsupervisorChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onstate_idChanging(System.Nullable<System.Guid> value);
    partial void Onstate_idChanged();
    partial void OncanContactChanging(System.Nullable<int> value);
    partial void OncanContactChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    partial void Onreason_leavingChanging(string value);
    partial void Onreason_leavingChanged();
    partial void Onstart_payChanging(string value);
    partial void Onstart_payChanged();
    partial void Onend_payChanging(string value);
    partial void Onend_payChanged();
    partial void Onapp_idChanging(System.Nullable<System.Guid> value);
    partial void Onapp_idChanged();
    #endregion
		
		public EmploymentHistory()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employer", DbType="VarChar(500)")]
		public string employer
		{
			get
			{
				return this._employer;
			}
			set
			{
				if ((this._employer != value))
				{
					this.OnemployerChanging(value);
					this.SendPropertyChanging();
					this._employer = value;
					this.SendPropertyChanged("employer");
					this.OnemployerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="Date")]
		public System.Nullable<System.DateTime> start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starting_title", DbType="VarChar(200)")]
		public string starting_title
		{
			get
			{
				return this._starting_title;
			}
			set
			{
				if ((this._starting_title != value))
				{
					this.Onstarting_titleChanging(value);
					this.SendPropertyChanging();
					this._starting_title = value;
					this.SendPropertyChanged("starting_title");
					this.Onstarting_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_title", DbType="VarChar(200)")]
		public string end_title
		{
			get
			{
				return this._end_title;
			}
			set
			{
				if ((this._end_title != value))
				{
					this.Onend_titleChanging(value);
					this.SendPropertyChanging();
					this._end_title = value;
					this.SendPropertyChanged("end_title");
					this.Onend_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor", DbType="VarChar(500)")]
		public string supervisor
		{
			get
			{
				return this._supervisor;
			}
			set
			{
				if ((this._supervisor != value))
				{
					this.OnsupervisorChanging(value);
					this.SendPropertyChanging();
					this._supervisor = value;
					this.SendPropertyChanged("supervisor");
					this.OnsupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(400)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(200)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canContact", DbType="Int")]
		public System.Nullable<int> canContact
		{
			get
			{
				return this._canContact;
			}
			set
			{
				if ((this._canContact != value))
				{
					this.OncanContactChanging(value);
					this.SendPropertyChanging();
					this._canContact = value;
					this.SendPropertyChanged("canContact");
					this.OncanContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string summary
		{
			get
			{
				return this._summary;
			}
			set
			{
				if ((this._summary != value))
				{
					this.OnsummaryChanging(value);
					this.SendPropertyChanging();
					this._summary = value;
					this.SendPropertyChanged("summary");
					this.OnsummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason_leaving", DbType="VarChar(500)")]
		public string reason_leaving
		{
			get
			{
				return this._reason_leaving;
			}
			set
			{
				if ((this._reason_leaving != value))
				{
					this.Onreason_leavingChanging(value);
					this.SendPropertyChanging();
					this._reason_leaving = value;
					this.SendPropertyChanged("reason_leaving");
					this.Onreason_leavingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_pay", DbType="VarChar(200)")]
		public string start_pay
		{
			get
			{
				return this._start_pay;
			}
			set
			{
				if ((this._start_pay != value))
				{
					this.Onstart_payChanging(value);
					this.SendPropertyChanging();
					this._start_pay = value;
					this.SendPropertyChanged("start_pay");
					this.Onstart_payChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_pay", DbType="VarChar(200)")]
		public string end_pay
		{
			get
			{
				return this._end_pay;
			}
			set
			{
				if ((this._end_pay != value))
				{
					this.Onend_payChanging(value);
					this.SendPropertyChanging();
					this._end_pay = value;
					this.SendPropertyChanged("end_pay");
					this.Onend_payChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_EmploymentHistory", Storage="_Application", ThisKey="app_id", OtherKey="id", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.EmploymentHistories.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.EmploymentHistories.Add(this);
						this._app_id = value.id;
					}
					else
					{
						this._app_id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreviousEmployment")]
	public partial class PreviousEmployment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _position;
		
		private System.Nullable<System.DateTime> _date_start;
		
		private System.Nullable<System.DateTime> _date_end;
		
		private System.Guid _app_id;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void Ondate_startChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_startChanged();
    partial void Ondate_endChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_endChanged();
    partial void Onapp_idChanging(System.Guid value);
    partial void Onapp_idChanged();
    #endregion
		
		public PreviousEmployment()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start", DbType="Date")]
		public System.Nullable<System.DateTime> date_start
		{
			get
			{
				return this._date_start;
			}
			set
			{
				if ((this._date_start != value))
				{
					this.Ondate_startChanging(value);
					this.SendPropertyChanging();
					this._date_start = value;
					this.SendPropertyChanged("date_start");
					this.Ondate_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_end", DbType="Date")]
		public System.Nullable<System.DateTime> date_end
		{
			get
			{
				return this._date_end;
			}
			set
			{
				if ((this._date_end != value))
				{
					this.Ondate_endChanging(value);
					this.SendPropertyChanging();
					this._date_end = value;
					this.SendPropertyChanged("date_end");
					this.Ondate_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_PreviousEmployment", Storage="_Application", ThisKey="app_id", OtherKey="id", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.PreviousEmployments.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.PreviousEmployments.Add(this);
						this._app_id = value.id;
					}
					else
					{
						this._app_id = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[References]")]
	public partial class Reference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private string _job_title;
		
		private string _phone;
		
		private System.Nullable<decimal> _years_known;
		
		private System.Nullable<System.Guid> _app_id;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onjob_titleChanging(string value);
    partial void Onjob_titleChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onyears_knownChanging(System.Nullable<decimal> value);
    partial void Onyears_knownChanged();
    partial void Onapp_idChanging(System.Nullable<System.Guid> value);
    partial void Onapp_idChanged();
    #endregion
		
		public Reference()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_title", DbType="VarChar(500)")]
		public string job_title
		{
			get
			{
				return this._job_title;
			}
			set
			{
				if ((this._job_title != value))
				{
					this.Onjob_titleChanging(value);
					this.SendPropertyChanging();
					this._job_title = value;
					this.SendPropertyChanged("job_title");
					this.Onjob_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(100)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_years_known", DbType="Decimal(18,1)")]
		public System.Nullable<decimal> years_known
		{
			get
			{
				return this._years_known;
			}
			set
			{
				if ((this._years_known != value))
				{
					this.Onyears_knownChanging(value);
					this.SendPropertyChanging();
					this._years_known = value;
					this.SendPropertyChanged("years_known");
					this.Onyears_knownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Reference", Storage="_Application", ThisKey="app_id", OtherKey="id", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.References.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.References.Add(this);
						this._app_id = value.id;
					}
					else
					{
						this._app_id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobCategory")]
	public partial class JobCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _job;
		
		private System.Guid _cat;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Job> _Job1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnjobChanging(System.Guid value);
    partial void OnjobChanged();
    partial void OncatChanging(System.Guid value);
    partial void OncatChanged();
    #endregion
		
		public JobCategory()
		{
			this._Category = default(EntityRef<Category>);
			this._Job1 = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					if (this._Job1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid cat
		{
			get
			{
				return this._cat;
			}
			set
			{
				if ((this._cat != value))
				{
					this.OncatChanging(value);
					this.SendPropertyChanging();
					this._cat = value;
					this.SendPropertyChanged("cat");
					this.OncatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobCategory_Category", Storage="_Category", ThisKey="cat", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.JobCategory = null;
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.JobCategory = this;
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobCategory", Storage="_Job1", ThisKey="job", OtherKey="id", IsForeignKey=true)]
		internal Job Job1
		{
			get
			{
				return this._Job1.Entity;
			}
			set
			{
				Job previousValue = this._Job1.Entity;
				if (((previousValue != value) 
							|| (this._Job1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job1.Entity = null;
						previousValue.JobCategories.Remove(this);
					}
					this._Job1.Entity = value;
					if ((value != null))
					{
						value.JobCategories.Add(this);
						this._job = value.id;
					}
					else
					{
						this._job = default(System.Guid);
					}
					this.SendPropertyChanged("Job1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applications")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.DateTime _date_added;
		
		private string _fname;
		
		private string _lname;
		
		private string _mname;
		
		private string _address;
		
		private string _city;
		
		private System.Nullable<System.Guid> _state_id;
		
		private string _zip;
		
		private string _phone1;
		
		private string _phone2;
		
		private string _referred_by;
		
		private System.Nullable<int> _isAdult;
		
		private System.Nullable<int> _isCitizen;
		
		private System.Nullable<int> _isEmployed;
		
		private System.Nullable<System.DateTime> _date_available;
		
		private System.Nullable<decimal> _desired_start;
		
		private System.Nullable<decimal> _desired_end;
		
		private string _employment_type;
		
		private string _preferred_shift;
		
		private string _additional_info;
		
		private string _service_branch;
		
		private System.Nullable<System.DateTime> _service_start;
		
		private System.Nullable<System.DateTime> _service_end;
		
		private string _rank_duties;
		
		private System.Nullable<System.DateTime> _date_dischaged;
		
		private System.Nullable<System.DateTime> _dob;
		
		private System.Nullable<int> _valid_license;
		
		private string _vehicles_driven;
		
		private System.Nullable<int> _years_driving;
		
		private string _driver_license_num;
		
		private string _chauffeur_license_num;
		
		private System.Nullable<System.Guid> _driver_license_state;
		
		private System.Nullable<System.Guid> _chauffeur_license_state;
		
		private System.Nullable<System.DateTime> _driver_license_exp;
		
		private System.Nullable<System.DateTime> _chauffeur_license_exp;
		
		private System.Nullable<int> _inAccidents;
		
		private string _accidents_desc;
		
		private System.Nullable<int> _license_suspended;
		
		private string _suspended_desc;
		
		private System.Nullable<int> _traffic_violations;
		
		private string _violations_desc;
		
		private System.Nullable<System.Guid> _job_id;
		
		private int _previousEmployee;
		
		private string _previousExplanation;
		
		private string _status;
		
		private System.Nullable<System.DateTime> _dateSubmitted;
		
		private EntitySet<EducationalBackground> _EducationalBackgrounds;
		
		private EntitySet<EmploymentHistory> _EmploymentHistories;
		
		private EntitySet<PreviousEmployment> _PreviousEmployments;
		
		private EntitySet<Reference> _References;
		
		private EntitySet<Conviction> _Convictions;
		
		private EntitySet<ApplicationFile> _ApplicationFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnmnameChanging(string value);
    partial void OnmnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onstate_idChanging(System.Nullable<System.Guid> value);
    partial void Onstate_idChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    partial void Onphone1Changing(string value);
    partial void Onphone1Changed();
    partial void Onphone2Changing(string value);
    partial void Onphone2Changed();
    partial void Onreferred_byChanging(string value);
    partial void Onreferred_byChanged();
    partial void OnisAdultChanging(System.Nullable<int> value);
    partial void OnisAdultChanged();
    partial void OnisCitizenChanging(System.Nullable<int> value);
    partial void OnisCitizenChanged();
    partial void OnisEmployedChanging(System.Nullable<int> value);
    partial void OnisEmployedChanged();
    partial void Ondate_availableChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_availableChanged();
    partial void Ondesired_startChanging(System.Nullable<decimal> value);
    partial void Ondesired_startChanged();
    partial void Ondesired_endChanging(System.Nullable<decimal> value);
    partial void Ondesired_endChanged();
    partial void Onemployment_typeChanging(string value);
    partial void Onemployment_typeChanged();
    partial void Onpreferred_shiftChanging(string value);
    partial void Onpreferred_shiftChanged();
    partial void Onadditional_infoChanging(string value);
    partial void Onadditional_infoChanged();
    partial void Onservice_branchChanging(string value);
    partial void Onservice_branchChanged();
    partial void Onservice_startChanging(System.Nullable<System.DateTime> value);
    partial void Onservice_startChanged();
    partial void Onservice_endChanging(System.Nullable<System.DateTime> value);
    partial void Onservice_endChanged();
    partial void Onrank_dutiesChanging(string value);
    partial void Onrank_dutiesChanged();
    partial void Ondate_dischagedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_dischagedChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void Onvalid_licenseChanging(System.Nullable<int> value);
    partial void Onvalid_licenseChanged();
    partial void Onvehicles_drivenChanging(string value);
    partial void Onvehicles_drivenChanged();
    partial void Onyears_drivingChanging(System.Nullable<int> value);
    partial void Onyears_drivingChanged();
    partial void Ondriver_license_numChanging(string value);
    partial void Ondriver_license_numChanged();
    partial void Onchauffeur_license_numChanging(string value);
    partial void Onchauffeur_license_numChanged();
    partial void Ondriver_license_stateChanging(System.Nullable<System.Guid> value);
    partial void Ondriver_license_stateChanged();
    partial void Onchauffeur_license_stateChanging(System.Nullable<System.Guid> value);
    partial void Onchauffeur_license_stateChanged();
    partial void Ondriver_license_expChanging(System.Nullable<System.DateTime> value);
    partial void Ondriver_license_expChanged();
    partial void Onchauffeur_license_expChanging(System.Nullable<System.DateTime> value);
    partial void Onchauffeur_license_expChanged();
    partial void OninAccidentsChanging(System.Nullable<int> value);
    partial void OninAccidentsChanged();
    partial void Onaccidents_descChanging(string value);
    partial void Onaccidents_descChanged();
    partial void Onlicense_suspendedChanging(System.Nullable<int> value);
    partial void Onlicense_suspendedChanged();
    partial void Onsuspended_descChanging(string value);
    partial void Onsuspended_descChanged();
    partial void Ontraffic_violationsChanging(System.Nullable<int> value);
    partial void Ontraffic_violationsChanged();
    partial void Onviolations_descChanging(string value);
    partial void Onviolations_descChanged();
    partial void Onjob_idChanging(System.Nullable<System.Guid> value);
    partial void Onjob_idChanged();
    partial void OnpreviousEmployeeChanging(int value);
    partial void OnpreviousEmployeeChanged();
    partial void OnpreviousExplanationChanging(string value);
    partial void OnpreviousExplanationChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OndateSubmittedChanging(System.Nullable<System.DateTime> value);
    partial void OndateSubmittedChanged();
    #endregion
		
		public Application()
		{
			this._EducationalBackgrounds = new EntitySet<EducationalBackground>(new Action<EducationalBackground>(this.attach_EducationalBackgrounds), new Action<EducationalBackground>(this.detach_EducationalBackgrounds));
			this._EmploymentHistories = new EntitySet<EmploymentHistory>(new Action<EmploymentHistory>(this.attach_EmploymentHistories), new Action<EmploymentHistory>(this.detach_EmploymentHistories));
			this._PreviousEmployments = new EntitySet<PreviousEmployment>(new Action<PreviousEmployment>(this.attach_PreviousEmployments), new Action<PreviousEmployment>(this.detach_PreviousEmployments));
			this._References = new EntitySet<Reference>(new Action<Reference>(this.attach_References), new Action<Reference>(this.detach_References));
			this._Convictions = new EntitySet<Conviction>(new Action<Conviction>(this.attach_Convictions), new Action<Conviction>(this.detach_Convictions));
			this._ApplicationFiles = new EntitySet<ApplicationFile>(new Action<ApplicationFile>(this.attach_ApplicationFiles), new Action<ApplicationFile>(this.detach_ApplicationFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(200)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(500)")]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mname", DbType="VarChar(50)")]
		public string mname
		{
			get
			{
				return this._mname;
			}
			set
			{
				if ((this._mname != value))
				{
					this.OnmnameChanging(value);
					this.SendPropertyChanging();
					this._mname = value;
					this.SendPropertyChanged("mname");
					this.OnmnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(200)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="VarChar(10)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone1", DbType="VarChar(20)")]
		public string phone1
		{
			get
			{
				return this._phone1;
			}
			set
			{
				if ((this._phone1 != value))
				{
					this.Onphone1Changing(value);
					this.SendPropertyChanging();
					this._phone1 = value;
					this.SendPropertyChanged("phone1");
					this.Onphone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone2", DbType="VarChar(20)")]
		public string phone2
		{
			get
			{
				return this._phone2;
			}
			set
			{
				if ((this._phone2 != value))
				{
					this.Onphone2Changing(value);
					this.SendPropertyChanging();
					this._phone2 = value;
					this.SendPropertyChanged("phone2");
					this.Onphone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referred_by", DbType="VarChar(200)")]
		public string referred_by
		{
			get
			{
				return this._referred_by;
			}
			set
			{
				if ((this._referred_by != value))
				{
					this.Onreferred_byChanging(value);
					this.SendPropertyChanging();
					this._referred_by = value;
					this.SendPropertyChanged("referred_by");
					this.Onreferred_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAdult", DbType="Int")]
		public System.Nullable<int> isAdult
		{
			get
			{
				return this._isAdult;
			}
			set
			{
				if ((this._isAdult != value))
				{
					this.OnisAdultChanging(value);
					this.SendPropertyChanging();
					this._isAdult = value;
					this.SendPropertyChanged("isAdult");
					this.OnisAdultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCitizen", DbType="Int")]
		public System.Nullable<int> isCitizen
		{
			get
			{
				return this._isCitizen;
			}
			set
			{
				if ((this._isCitizen != value))
				{
					this.OnisCitizenChanging(value);
					this.SendPropertyChanging();
					this._isCitizen = value;
					this.SendPropertyChanged("isCitizen");
					this.OnisCitizenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isEmployed", DbType="Int")]
		public System.Nullable<int> isEmployed
		{
			get
			{
				return this._isEmployed;
			}
			set
			{
				if ((this._isEmployed != value))
				{
					this.OnisEmployedChanging(value);
					this.SendPropertyChanging();
					this._isEmployed = value;
					this.SendPropertyChanged("isEmployed");
					this.OnisEmployedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_available", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_available
		{
			get
			{
				return this._date_available;
			}
			set
			{
				if ((this._date_available != value))
				{
					this.Ondate_availableChanging(value);
					this.SendPropertyChanging();
					this._date_available = value;
					this.SendPropertyChanged("date_available");
					this.Ondate_availableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desired_start", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> desired_start
		{
			get
			{
				return this._desired_start;
			}
			set
			{
				if ((this._desired_start != value))
				{
					this.Ondesired_startChanging(value);
					this.SendPropertyChanging();
					this._desired_start = value;
					this.SendPropertyChanged("desired_start");
					this.Ondesired_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desired_end", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> desired_end
		{
			get
			{
				return this._desired_end;
			}
			set
			{
				if ((this._desired_end != value))
				{
					this.Ondesired_endChanging(value);
					this.SendPropertyChanging();
					this._desired_end = value;
					this.SendPropertyChanged("desired_end");
					this.Ondesired_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employment_type", DbType="VarChar(500)")]
		public string employment_type
		{
			get
			{
				return this._employment_type;
			}
			set
			{
				if ((this._employment_type != value))
				{
					this.Onemployment_typeChanging(value);
					this.SendPropertyChanging();
					this._employment_type = value;
					this.SendPropertyChanged("employment_type");
					this.Onemployment_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preferred_shift", DbType="VarChar(500)")]
		public string preferred_shift
		{
			get
			{
				return this._preferred_shift;
			}
			set
			{
				if ((this._preferred_shift != value))
				{
					this.Onpreferred_shiftChanging(value);
					this.SendPropertyChanging();
					this._preferred_shift = value;
					this.SendPropertyChanged("preferred_shift");
					this.Onpreferred_shiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_additional_info", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string additional_info
		{
			get
			{
				return this._additional_info;
			}
			set
			{
				if ((this._additional_info != value))
				{
					this.Onadditional_infoChanging(value);
					this.SendPropertyChanging();
					this._additional_info = value;
					this.SendPropertyChanged("additional_info");
					this.Onadditional_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_branch", DbType="VarChar(400)")]
		public string service_branch
		{
			get
			{
				return this._service_branch;
			}
			set
			{
				if ((this._service_branch != value))
				{
					this.Onservice_branchChanging(value);
					this.SendPropertyChanging();
					this._service_branch = value;
					this.SendPropertyChanged("service_branch");
					this.Onservice_branchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_start", DbType="Date")]
		public System.Nullable<System.DateTime> service_start
		{
			get
			{
				return this._service_start;
			}
			set
			{
				if ((this._service_start != value))
				{
					this.Onservice_startChanging(value);
					this.SendPropertyChanging();
					this._service_start = value;
					this.SendPropertyChanged("service_start");
					this.Onservice_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_end", DbType="Date")]
		public System.Nullable<System.DateTime> service_end
		{
			get
			{
				return this._service_end;
			}
			set
			{
				if ((this._service_end != value))
				{
					this.Onservice_endChanging(value);
					this.SendPropertyChanging();
					this._service_end = value;
					this.SendPropertyChanged("service_end");
					this.Onservice_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rank_duties", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string rank_duties
		{
			get
			{
				return this._rank_duties;
			}
			set
			{
				if ((this._rank_duties != value))
				{
					this.Onrank_dutiesChanging(value);
					this.SendPropertyChanging();
					this._rank_duties = value;
					this.SendPropertyChanged("rank_duties");
					this.Onrank_dutiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_dischaged", DbType="Date")]
		public System.Nullable<System.DateTime> date_dischaged
		{
			get
			{
				return this._date_dischaged;
			}
			set
			{
				if ((this._date_dischaged != value))
				{
					this.Ondate_dischagedChanging(value);
					this.SendPropertyChanging();
					this._date_dischaged = value;
					this.SendPropertyChanged("date_dischaged");
					this.Ondate_dischagedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Date")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid_license", DbType="Int")]
		public System.Nullable<int> valid_license
		{
			get
			{
				return this._valid_license;
			}
			set
			{
				if ((this._valid_license != value))
				{
					this.Onvalid_licenseChanging(value);
					this.SendPropertyChanging();
					this._valid_license = value;
					this.SendPropertyChanged("valid_license");
					this.Onvalid_licenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicles_driven", DbType="VarChar(500)")]
		public string vehicles_driven
		{
			get
			{
				return this._vehicles_driven;
			}
			set
			{
				if ((this._vehicles_driven != value))
				{
					this.Onvehicles_drivenChanging(value);
					this.SendPropertyChanging();
					this._vehicles_driven = value;
					this.SendPropertyChanged("vehicles_driven");
					this.Onvehicles_drivenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_years_driving", DbType="Int")]
		public System.Nullable<int> years_driving
		{
			get
			{
				return this._years_driving;
			}
			set
			{
				if ((this._years_driving != value))
				{
					this.Onyears_drivingChanging(value);
					this.SendPropertyChanging();
					this._years_driving = value;
					this.SendPropertyChanged("years_driving");
					this.Onyears_drivingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_license_num", DbType="VarChar(200)")]
		public string driver_license_num
		{
			get
			{
				return this._driver_license_num;
			}
			set
			{
				if ((this._driver_license_num != value))
				{
					this.Ondriver_license_numChanging(value);
					this.SendPropertyChanging();
					this._driver_license_num = value;
					this.SendPropertyChanged("driver_license_num");
					this.Ondriver_license_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chauffeur_license_num", DbType="VarChar(200)")]
		public string chauffeur_license_num
		{
			get
			{
				return this._chauffeur_license_num;
			}
			set
			{
				if ((this._chauffeur_license_num != value))
				{
					this.Onchauffeur_license_numChanging(value);
					this.SendPropertyChanging();
					this._chauffeur_license_num = value;
					this.SendPropertyChanged("chauffeur_license_num");
					this.Onchauffeur_license_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_license_state", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> driver_license_state
		{
			get
			{
				return this._driver_license_state;
			}
			set
			{
				if ((this._driver_license_state != value))
				{
					this.Ondriver_license_stateChanging(value);
					this.SendPropertyChanging();
					this._driver_license_state = value;
					this.SendPropertyChanged("driver_license_state");
					this.Ondriver_license_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chauffeur_license_state", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> chauffeur_license_state
		{
			get
			{
				return this._chauffeur_license_state;
			}
			set
			{
				if ((this._chauffeur_license_state != value))
				{
					this.Onchauffeur_license_stateChanging(value);
					this.SendPropertyChanging();
					this._chauffeur_license_state = value;
					this.SendPropertyChanged("chauffeur_license_state");
					this.Onchauffeur_license_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_license_exp", DbType="Date")]
		public System.Nullable<System.DateTime> driver_license_exp
		{
			get
			{
				return this._driver_license_exp;
			}
			set
			{
				if ((this._driver_license_exp != value))
				{
					this.Ondriver_license_expChanging(value);
					this.SendPropertyChanging();
					this._driver_license_exp = value;
					this.SendPropertyChanged("driver_license_exp");
					this.Ondriver_license_expChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chauffeur_license_exp", DbType="Date")]
		public System.Nullable<System.DateTime> chauffeur_license_exp
		{
			get
			{
				return this._chauffeur_license_exp;
			}
			set
			{
				if ((this._chauffeur_license_exp != value))
				{
					this.Onchauffeur_license_expChanging(value);
					this.SendPropertyChanging();
					this._chauffeur_license_exp = value;
					this.SendPropertyChanged("chauffeur_license_exp");
					this.Onchauffeur_license_expChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inAccidents", DbType="Int")]
		public System.Nullable<int> inAccidents
		{
			get
			{
				return this._inAccidents;
			}
			set
			{
				if ((this._inAccidents != value))
				{
					this.OninAccidentsChanging(value);
					this.SendPropertyChanging();
					this._inAccidents = value;
					this.SendPropertyChanged("inAccidents");
					this.OninAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accidents_desc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string accidents_desc
		{
			get
			{
				return this._accidents_desc;
			}
			set
			{
				if ((this._accidents_desc != value))
				{
					this.Onaccidents_descChanging(value);
					this.SendPropertyChanging();
					this._accidents_desc = value;
					this.SendPropertyChanged("accidents_desc");
					this.Onaccidents_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_license_suspended", DbType="Int")]
		public System.Nullable<int> license_suspended
		{
			get
			{
				return this._license_suspended;
			}
			set
			{
				if ((this._license_suspended != value))
				{
					this.Onlicense_suspendedChanging(value);
					this.SendPropertyChanging();
					this._license_suspended = value;
					this.SendPropertyChanged("license_suspended");
					this.Onlicense_suspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suspended_desc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string suspended_desc
		{
			get
			{
				return this._suspended_desc;
			}
			set
			{
				if ((this._suspended_desc != value))
				{
					this.Onsuspended_descChanging(value);
					this.SendPropertyChanging();
					this._suspended_desc = value;
					this.SendPropertyChanged("suspended_desc");
					this.Onsuspended_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_traffic_violations", DbType="Int")]
		public System.Nullable<int> traffic_violations
		{
			get
			{
				return this._traffic_violations;
			}
			set
			{
				if ((this._traffic_violations != value))
				{
					this.Ontraffic_violationsChanging(value);
					this.SendPropertyChanging();
					this._traffic_violations = value;
					this.SendPropertyChanged("traffic_violations");
					this.Ontraffic_violationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_violations_desc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string violations_desc
		{
			get
			{
				return this._violations_desc;
			}
			set
			{
				if ((this._violations_desc != value))
				{
					this.Onviolations_descChanging(value);
					this.SendPropertyChanging();
					this._violations_desc = value;
					this.SendPropertyChanged("violations_desc");
					this.Onviolations_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> job_id
		{
			get
			{
				return this._job_id;
			}
			set
			{
				if ((this._job_id != value))
				{
					this.Onjob_idChanging(value);
					this.SendPropertyChanging();
					this._job_id = value;
					this.SendPropertyChanged("job_id");
					this.Onjob_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousEmployee", DbType="Int NOT NULL")]
		public int previousEmployee
		{
			get
			{
				return this._previousEmployee;
			}
			set
			{
				if ((this._previousEmployee != value))
				{
					this.OnpreviousEmployeeChanging(value);
					this.SendPropertyChanging();
					this._previousEmployee = value;
					this.SendPropertyChanged("previousEmployee");
					this.OnpreviousEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_previousExplanation", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string previousExplanation
		{
			get
			{
				return this._previousExplanation;
			}
			set
			{
				if ((this._previousExplanation != value))
				{
					this.OnpreviousExplanationChanging(value);
					this.SendPropertyChanging();
					this._previousExplanation = value;
					this.SendPropertyChanged("previousExplanation");
					this.OnpreviousExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateSubmitted", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateSubmitted
		{
			get
			{
				return this._dateSubmitted;
			}
			set
			{
				if ((this._dateSubmitted != value))
				{
					this.OndateSubmittedChanging(value);
					this.SendPropertyChanging();
					this._dateSubmitted = value;
					this.SendPropertyChanged("dateSubmitted");
					this.OndateSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_EducationalBackground", Storage="_EducationalBackgrounds", ThisKey="id", OtherKey="app_id")]
		public EntitySet<EducationalBackground> EducationalBackgrounds
		{
			get
			{
				return this._EducationalBackgrounds;
			}
			set
			{
				this._EducationalBackgrounds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_EmploymentHistory", Storage="_EmploymentHistories", ThisKey="id", OtherKey="app_id")]
		public EntitySet<EmploymentHistory> EmploymentHistories
		{
			get
			{
				return this._EmploymentHistories;
			}
			set
			{
				this._EmploymentHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_PreviousEmployment", Storage="_PreviousEmployments", ThisKey="id", OtherKey="app_id")]
		public EntitySet<PreviousEmployment> PreviousEmployments
		{
			get
			{
				return this._PreviousEmployments;
			}
			set
			{
				this._PreviousEmployments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Reference", Storage="_References", ThisKey="id", OtherKey="app_id")]
		public EntitySet<Reference> References
		{
			get
			{
				return this._References;
			}
			set
			{
				this._References.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Conviction", Storage="_Convictions", ThisKey="id", OtherKey="app_id")]
		public EntitySet<Conviction> Convictions
		{
			get
			{
				return this._Convictions;
			}
			set
			{
				this._Convictions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationFile", Storage="_ApplicationFiles", ThisKey="id", OtherKey="app_id")]
		public EntitySet<ApplicationFile> ApplicationFiles
		{
			get
			{
				return this._ApplicationFiles;
			}
			set
			{
				this._ApplicationFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EducationalBackgrounds(EducationalBackground entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_EducationalBackgrounds(EducationalBackground entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_EmploymentHistories(EmploymentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_EmploymentHistories(EmploymentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_PreviousEmployments(PreviousEmployment entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_PreviousEmployments(PreviousEmployment entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_References(Reference entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Convictions(Conviction entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Convictions(Conviction entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationFiles(ApplicationFile entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationFiles(ApplicationFile entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Convictions")]
	public partial class Conviction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _conviction1;
		
		private System.Nullable<System.DateTime> _date_convicted;
		
		private System.Nullable<System.Guid> _app_id;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onconviction1Changing(string value);
    partial void Onconviction1Changed();
    partial void Ondate_convictedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_convictedChanged();
    partial void Onapp_idChanging(System.Nullable<System.Guid> value);
    partial void Onapp_idChanged();
    #endregion
		
		public Conviction()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="conviction", Storage="_conviction1", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string conviction1
		{
			get
			{
				return this._conviction1;
			}
			set
			{
				if ((this._conviction1 != value))
				{
					this.Onconviction1Changing(value);
					this.SendPropertyChanging();
					this._conviction1 = value;
					this.SendPropertyChanged("conviction1");
					this.Onconviction1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_convicted", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_convicted
		{
			get
			{
				return this._date_convicted;
			}
			set
			{
				if ((this._date_convicted != value))
				{
					this.Ondate_convictedChanging(value);
					this.SendPropertyChanging();
					this._date_convicted = value;
					this.SendPropertyChanged("date_convicted");
					this.Ondate_convictedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Conviction", Storage="_Application", ThisKey="app_id", OtherKey="id", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Convictions.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Convictions.Add(this);
						this._app_id = value.id;
					}
					else
					{
						this._app_id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationFile")]
	public partial class ApplicationFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _app_id;
		
		private string _name;
		
		private System.Nullable<int> _size;
		
		private System.Data.Linq.Binary _fileContent;
		
		private string _fileName;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onapp_idChanging(System.Guid value);
    partial void Onapp_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsizeChanging(System.Nullable<int> value);
    partial void OnsizeChanged();
    partial void OnfileContentChanging(System.Data.Linq.Binary value);
    partial void OnfileContentChanged();
    partial void OnfileNameChanging(string value);
    partial void OnfileNameChanged();
    #endregion
		
		public ApplicationFile()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="Int")]
		public System.Nullable<int> size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileContent", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary fileContent
		{
			get
			{
				return this._fileContent;
			}
			set
			{
				if ((this._fileContent != value))
				{
					this.OnfileContentChanging(value);
					this.SendPropertyChanging();
					this._fileContent = value;
					this.SendPropertyChanged("fileContent");
					this.OnfileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileName", DbType="VarChar(255)")]
		public string fileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnfileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("fileName");
					this.OnfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationFile", Storage="_Application", ThisKey="app_id", OtherKey="id", IsForeignKey=true)]
		internal Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationFiles.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationFiles.Add(this);
						this._app_id = value.id;
					}
					else
					{
						this._app_id = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobShift")]
	public partial class JobShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _job;
		
		private System.Guid _shift;
		
		private EntityRef<Shift> _Shifts;
		
		private EntityRef<Job> _Job1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnjobChanging(System.Guid value);
    partial void OnjobChanged();
    partial void OnshiftChanging(System.Guid value);
    partial void OnshiftChanged();
    #endregion
		
		public JobShift()
		{
			this._Shifts = default(EntityRef<Shift>);
			this._Job1 = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					if (this._Job1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shift", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid shift
		{
			get
			{
				return this._shift;
			}
			set
			{
				if ((this._shift != value))
				{
					this.OnshiftChanging(value);
					this.SendPropertyChanging();
					this._shift = value;
					this.SendPropertyChanged("shift");
					this.OnshiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobShift_Shift", Storage="_Shifts", ThisKey="shift", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Shift Shift
		{
			get
			{
				return this._Shifts.Entity;
			}
			set
			{
				Shift previousValue = this._Shifts.Entity;
				if (((previousValue != value) 
							|| (this._Shifts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shifts.Entity = null;
						previousValue.JobShift = null;
					}
					this._Shifts.Entity = value;
					if ((value != null))
					{
						value.JobShift = this;
					}
					this.SendPropertyChanged("Shift");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobShift", Storage="_Job1", ThisKey="job", OtherKey="id", IsForeignKey=true)]
		internal Job Job1
		{
			get
			{
				return this._Job1.Entity;
			}
			set
			{
				Job previousValue = this._Job1.Entity;
				if (((previousValue != value) 
							|| (this._Job1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job1.Entity = null;
						previousValue.JobShifts.Remove(this);
					}
					this._Job1.Entity = value;
					if ((value != null))
					{
						value.JobShifts.Add(this);
						this._job = value.id;
					}
					else
					{
						this._job = default(System.Guid);
					}
					this.SendPropertyChanged("Job1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shift")]
	public partial class Shift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _shift1;
		
		private System.DateTime _date_added;
		
		private EntityRef<JobShift> _JobShift;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onshift1Changing(string value);
    partial void Onshift1Changed();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public Shift()
		{
			this._JobShift = default(EntityRef<JobShift>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._JobShift.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shift", Storage="_shift1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string shift1
		{
			get
			{
				return this._shift1;
			}
			set
			{
				if ((this._shift1 != value))
				{
					this.Onshift1Changing(value);
					this.SendPropertyChanging();
					this._shift1 = value;
					this.SendPropertyChanged("shift1");
					this.Onshift1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobShift_Shift", Storage="_JobShift", ThisKey="id", OtherKey="shift", IsForeignKey=true)]
		internal JobShift JobShift
		{
			get
			{
				return this._JobShift.Entity;
			}
			set
			{
				JobShift previousValue = this._JobShift.Entity;
				if (((previousValue != value) 
							|| (this._JobShift.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobShift.Entity = null;
						previousValue.Shift = null;
					}
					this._JobShift.Entity = value;
					if ((value != null))
					{
						value.Shift = this;
						this._id = value.shift;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("JobShift");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobContact")]
	public partial class JobContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _job;
		
		private System.Guid _contact;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Job> _Job1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnjobChanging(System.Guid value);
    partial void OnjobChanged();
    partial void OncontactChanging(System.Guid value);
    partial void OncontactChanged();
    #endregion
		
		public JobContact()
		{
			this._Contact = default(EntityRef<Contact>);
			this._Job1 = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					if (this._Job1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobContact_Contact", Storage="_Contact", ThisKey="contact", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.JobContact = null;
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.JobContact = this;
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobContact", Storage="_Job1", ThisKey="job", OtherKey="id", IsForeignKey=true)]
		internal Job Job1
		{
			get
			{
				return this._Job1.Entity;
			}
			set
			{
				Job previousValue = this._Job1.Entity;
				if (((previousValue != value) 
							|| (this._Job1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job1.Entity = null;
						previousValue.Notifications.Remove(this);
					}
					this._Job1.Entity = value;
					if ((value != null))
					{
						value.Notifications.Add(this);
						this._job = value.id;
					}
					else
					{
						this._job = default(System.Guid);
					}
					this.SendPropertyChanged("Job1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
